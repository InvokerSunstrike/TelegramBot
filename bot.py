import asyncio
from aiogram import Bot, Dispatcher, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart
from aiogram.client.default import DefaultBotProperties

API_TOKEN = '7638188374:AAHyAP7znIM-X_QioGiyPQ2KUFhbRkQ7PbQ'

bot = Bot(token=API_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher()

start_text = (
    "<b>–ê—Å—Å–∞–ª–∞–º—É –ê–ª–µ–π–∫—É–º, –ó—É–ª–µ–π—Ö–∞ üíô</b>\n\n"
    "–≠—Ç–æ—Ç –±–æ—Ç –º—ã —Å–æ–∑–¥–∞–ª–∏ –¥–ª—è –Ω–∞—Å –¥–≤–æ–∏—Ö. –ß—Ç–æ–±—ã –±–ª–∏–∂–µ —É–∑–Ω–∞–≤–∞—Ç—å –¥—Ä—É–≥ –¥—Ä—É–≥–∞, "
    "—Å–±–ª–∏–∂–∞—Ç—å—Å—è —Å–µ—Ä–¥—Ü–∞–º–∏, —É–∫—Ä–µ–ø–ª—è—Ç—å –ª—é–±–æ–≤—å –∏ –≤–µ—Ä—É. –ü—É—Å—Ç—å –∫–∞–∂–¥—ã–π –≤–æ–ø—Ä–æ—Å —Å—Ç–∞–Ω–µ—Ç —à–∞–≥–æ–º "
    "–∫ –ª—É—á—à–µ–º—É –≤–∑–∞–∏–º–æ–ø–æ–Ω–∏–º–∞–Ω–∏—é –∏ –∫ —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏—é –≤ —Å–µ—Ä–¥—Ü–µ.\n\n"
    "<i>–í—ã–±–µ—Ä–∏ —Ä–∞–∑–¥–µ–ª –Ω–∏–∂–µ –∏ –Ω–∞—á–Ω–∏ —Å –ª—é–±–æ–≥–æ, —á—Ç–æ –∑–æ–≤—ë—Ç —Ç–≤–æ—ë —Å–µ—Ä–¥—Ü–µ.</i> ü§ç"
)

quiz_data = {
    "heart": [
        {"q": "–ü–æ—á–µ–º—É –∏—Å–ª–∞–º —Å—á–∏—Ç–∞—é—Ç —Ä–µ–ª–∏–≥–∏–µ–π, –æ—á–∏—â–∞—é—â–µ–π —Å–µ—Ä–¥—Ü–∞?", "options": ["–ü–æ—Ç–æ–º—É —á—Ç–æ –∑–∞–ø—Ä–µ—â–µ–Ω–æ –≤—Å—ë –≤—Ä–µ–¥–Ω–æ–µ", "–ü–æ—Ç–æ–º—É —á—Ç–æ –ø—Ä–∏–∑—ã–≤–∞–µ—Ç –∫ –æ—á–∏—â–µ–Ω–∏—é –∫–∞–∫ –≤–Ω–µ—à–Ω–µ–º—É, —Ç–∞–∫ –∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º—É", "–ü–æ—Ç–æ–º—É —á—Ç–æ —Ä–µ–ª–∏–≥–∏—è —Å—Ç—Ä–æ–≥–æ—Å—Ç–∏", "–ü–æ—Ç–æ–º—É —á—Ç–æ –æ–±—è–∑—ã–≤–∞–µ—Ç –ø–æ—Å—Ç–∏—Ç—å—Å—è"], "a": 1},
        {"q": "–ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å —Å–µ—Ä–¥—Ü–µ–º, –µ—Å–ª–∏ –æ–Ω–æ –ª–∏—à–µ–Ω–æ –∏—Å—Ç–∏–Ω—ã?", "options": ["–û–Ω–æ –ø–æ–∫—Ä—ã–≤–∞–µ—Ç—Å—è —Ä–∂–∞–≤—á–∏–Ω–æ–π", "–û–Ω–æ –Ω–∞—á–∏–Ω–∞–µ—Ç —É—Å–∫–æ—Ä–µ–Ω–Ω–æ –±–∏—Ç—å—Å—è", "–û–Ω–æ –∑–∞–±—ã–≤–∞–µ—Ç –ø–∞–º—è—Ç—å", "–û–Ω–æ –ø–µ—Ä–µ—Å—Ç–∞—ë—Ç —Ä–∞–±–æ—Ç–∞—Ç—å"], "a": 0},
        {"q": "–ß–µ–º —è–≤–ª—è—é—Ç—Å—è –ö–æ—Ä–∞–Ω –∏ –°—É–Ω–Ω–∞ –¥–ª—è —Å–µ—Ä–¥–µ—Ü?", "options": ["–ò—Å—Ç–æ—á–Ω–∏–∫ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è", "–ò—Å—Ü–µ–ª–µ–Ω–∏–µ–º –∏ –º–∏–ª–æ—Å—Ç—å—é –¥–ª—è –≤–µ—Ä—É—é—â–∏—Ö", "–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ–º —Ç–æ–ª—å–∫–æ –¥–ª—è –ø—Ä–∞–≤–∏—Ç–µ–ª–µ–π", "–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–º–∏ –∑–∞–ø–∏—Å—è–º–∏"], "a": 1},
        {"q": "–ö —á–µ–º—É –∑–æ–≤—ë—Ç –ê–ª–ª–∞—Ö –≤ —Å—É—Ä–µ ¬´–∞–ª—å-–ê–Ω—Ñ–∞–ª—å¬ª, –∫–æ–≥–¥–∞ –ø—Ä–∏–∑—ã–≤–∞–µ—Ç —É–≤–µ—Ä–æ–≤–∞—Ç—å?", "options": ["–ö –∂–∏–∑–Ω–∏ —Å–µ—Ä–¥—Ü–∞ —á–µ—Ä–µ–∑ –≤–µ—Ä—É", "–ö –∑–Ω–∞–Ω–∏—é –∏—Å—Ç–æ—Ä–∏–∏ —É–º–º—ã", "–ö –ø–æ–∏—Å–∫—É –±–æ–≥–∞—Ç—Å—Ç–≤–∞", "–ö —Å–∏–ª–µ —Ä–∞–∑—É–º–∞"], "a": 0},
        {"q": "–ß—Ç–æ —Å–ø–∞—Å–∞–µ—Ç —á–µ–ª–æ–≤–µ–∫–∞ –≤ –°—É–¥–Ω—ã–π –¥–µ–Ω—å —Å–æ–≥–ª–∞—Å–Ω–æ —Å—É—Ä–µ ¬´–∞—à-–®—É‚Äô–∞—Ä–∞¬ª?", "options": ["–ß–∏—Å—Ç–æ–µ —Å–µ—Ä–¥—Ü–µ", "–ß–∏—Å–ª–æ –ø–æ–∫–ª–æ–Ω–µ–Ω–∏–π", "–ó–Ω–∞–Ω–∏—è –∏ –Ω–∞—É–∫–∞", "–•–æ—Ä–æ—à–µ–µ –ø—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏–µ"], "a": 0}
    ],
    "heart_summary": """<b>üìñ –ê—è—Ç –¥–ª—è —É–∫—Ä–µ–ø–ª–µ–Ω–∏—è —Å–µ—Ä–¥—Ü–∞</b>
ÿ±Ÿéÿ®ŸéŸëŸÜŸéÿß ŸÑŸéÿß ÿ™Ÿèÿ≤Ÿêÿ∫Ÿí ŸÇŸèŸÑŸèŸàÿ®ŸéŸÜŸéÿß ÿ®ŸéÿπŸíÿØŸé ÿ•Ÿêÿ∞Ÿí ŸáŸéÿØŸéŸäŸíÿ™ŸéŸÜŸéÿß
<em>"–ì–æ—Å–ø–æ–¥—å –Ω–∞—à! –ù–µ —É–∫–ª–æ–Ω—è–π –Ω–∞—à–∏ —Å–µ—Ä–¥—Ü–∞ –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –¢—ã –Ω–∞—Å—Ç–∞–≤–∏–ª –Ω–∞—Å!"</em>
‚Äî –°—É—Ä–∞ –ê–ª–∏ –ò–º—Ä–∞–Ω, 3:8

üîπ –£—á–∏—Ç—Å—è –±—ã—Å—Ç—Ä–æ, —á–∏—Ç–∞–π –∫–∞–∂–¥—ã–π –¥–µ–Ω—å, –æ—Å–æ–±–µ–Ω–Ω–æ –ø–æ—Å–ª–µ –Ω–∞–º–∞–∑–∞.

‚ù§Ô∏è –û—Å–Ω–æ–≤–Ω–æ–π —Ö–∞–¥–∏—Å –æ —Å–µ—Ä–¥—Ü–µ
¬´–ü–æ–∏—Å—Ç–∏–Ω–µ, –≤ —Ç–µ–ª–µ –µ—Å—Ç—å –∫—É—Å–æ—á–µ–∫ –º—è—Å–∞: –µ—Å–ª–∏ –æ–Ω –∏—Å–ø—Ä–∞–≤–µ–Ω ‚Äî –∏—Å–ø—Ä–∞–≤–Ω–æ –≤—Å—ë —Ç–µ–ª–æ; –µ—Å–ª–∏ –æ–Ω –∏—Å–ø–æ—Ä—á–µ–Ω ‚Äî –∏—Å–ø–æ—Ä—á–µ–Ω–æ –≤—Å—ë —Ç–µ–ª–æ. –≠—Ç–æ ‚Äî —Å–µ—Ä–¥—Ü–µ¬ª.
‚Äî –∞–ª—å-–ë—É—Ö–∞—Ä–∏, –ú—É—Å–ª–∏–º

üîπ –•–æ—Ä–æ—à–æ –∑–∞—Ö–æ–¥–∏—Ç –Ω–∞–∏–∑—É—Å—Ç—å, –ª–µ–≥–∫–æ –ø–æ–Ω—è—Ç—å. –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è —Å–µ–±–µ –∏ –¥—Ä—É–≥–∏–º.

üå™ –•–∞–¥–∏—Å –æ –ø–µ—Ä–µ–º–µ–Ω—á–∏–≤–æ—Å—Ç–∏ —Å–µ—Ä–¥—Ü–∞
¬´–°–µ—Ä–¥—Ü–µ ‚Äî –∫–∞–∫ –ø–µ—Ä–æ –≤ –ø—É—Å—Ç—ã–Ω–µ: –≤–µ—Ç–µ—Ä –ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç –µ–≥–æ —Ç–æ –≤ –æ–¥–Ω—É, —Ç–æ –≤ –¥—Ä—É–≥—É—é —Å—Ç–æ—Ä–æ–Ω—É¬ª.
‚Äî –ê—Ö–º–∞–¥ 4/408

üîπ –û—á–µ–Ω—å –æ–±—Ä–∞–∑–Ω–æ–µ, —Å—Ä–∞–∑—É –æ—Ç–ø–µ—á–∞—Ç—ã–≤–∞–µ—Ç—Å—è –≤ —Å–æ–∑–Ω–∞–Ω–∏–∏.

üïäÔ∏è –ú–æ–ª—å–±–∞ –ü—Ä–æ—Ä–æ–∫–∞ Ô∑∫
ÿßŸÑŸÑŸéŸëŸáŸèŸÖŸéŸë ÿ•ŸêŸÜŸêŸëŸä ÿ£Ÿéÿ≥Ÿíÿ£ŸéŸÑŸèŸÉŸé ŸÇŸéŸÑŸíÿ®Ÿãÿß ÿ≥ŸéŸÑŸêŸäŸÖŸãÿß
"–û –ê–ª–ª–∞—Ö, —è –ø—Ä–æ—à—É —É –¢–µ–±—è –∑–¥—Ä–∞–≤–æ–µ —Å–µ—Ä–¥—Ü–µ!"

üîπ –û—á–µ–Ω—å –∫–æ—Ä–æ—Ç–∫–∞—è, –∏—Å–∫—Ä–µ–Ω–Ω—è—è. –ü–æ–≤—Ç–æ—Ä—è–π –≤ –¥—É–∞, –ª–µ–≥–∫–æ —É—á–∏—Ç—å –∏ –¥–µ—Ç—è–º, –∏ –≤–∑—Ä–æ—Å–ª—ã–º.

üîí –ß–∞—Å—Ç–æ –ø–æ–≤—Ç–æ—Ä—è–µ–º–∞—è –¥—É–∞ –ü—Ä–æ—Ä–æ–∫–∞ Ô∑∫
ŸäŸéÿß ŸÖŸèŸÇŸéŸÑŸêŸëÿ®Ÿé ÿßŸÑŸíŸÇŸèŸÑŸèŸàÿ®Ÿê ÿ´Ÿéÿ®ŸêŸëÿ™Ÿí ŸÇŸéŸÑŸíÿ®ŸêŸä ÿπŸéŸÑŸéŸâ ÿØŸêŸäŸÜŸêŸÉŸé
"–û –ü–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞—é—â–∏–π —Å–µ—Ä–¥—Ü–∞! –£—Ç–≤–µ—Ä–¥–∏ –º–æ—ë —Å–µ—Ä–¥—Ü–µ –Ω–∞ –¢–≤–æ–µ–π —Ä–µ–ª–∏–≥–∏–∏!"

üîπ –≠—Ç–æ –æ–¥–Ω–æ –∏–∑ —Å–∞–º—ã—Ö —Å–∏–ª—å–Ω—ã—Ö –ø—Ä–æ—à–µ–Ω–∏–π ‚Äî –ø—Ä–æ—Å–∏ —Å —Ö–æ—à—É‚Äò (—Å–º–∏—Ä–µ–Ω–∏–µ–º).

‚ú® –ê—è—Ç, –Ω–∞–ø–æ–ª–Ω—è—é—â–∏–π –¥—É—à—É —Ä–∞–¥–æ—Å—Ç—å—é
ŸÖŸéŸÜŸí ÿπŸéŸÖŸêŸÑŸé ÿµŸéÿßŸÑŸêÿ≠Ÿãÿß ŸÖŸêŸëŸÜ ÿ∞ŸéŸÉŸéÿ±Ÿç ÿ£ŸéŸàŸí ÿ£ŸèŸÜÿ´ŸéŸâ ŸàŸéŸáŸèŸàŸé ŸÖŸèÿ§ŸíŸÖŸêŸÜŸå ŸÅŸéŸÑŸéŸÜŸèÿ≠ŸíŸäŸêŸäŸéŸÜŸéŸëŸáŸè ÿ≠ŸéŸäŸéÿßÿ©Ÿã ÿ∑ŸéŸäŸêŸëÿ®Ÿéÿ©Ÿã
"–ö—Ç–æ –±—ã –Ω–∏ —Å–æ–≤–µ—Ä—à–∞–ª –ø—Ä–∞–≤–µ–¥–Ω—ã–µ –¥–µ–ª–∞, –±—É–¥—å —Ç–æ –º—É–∂—á–∏–Ω–∞ –∏–ª–∏ –∂–µ–Ω—â–∏–Ω–∞, –∏ –±—É–¥–µ—Ç –≤–µ—Ä—É—é—â–∏–º ‚Äî –ú—ã –Ω–µ–ø—Ä–µ–º–µ–Ω–Ω–æ –¥–∞—Ä—É–µ–º –µ–º—É –ø—Ä–µ–∫—Ä–∞—Å–Ω—É—é –∂–∏–∑–Ω—å".
‚Äî –°—É—Ä–∞ –∞–Ω-–ù–∞—Ö–ª—å, 16:97"""
}

user_progress = {}

menu_keyboard = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="üßº –û—á–∏—â–µ–Ω–∏–µ —Å–µ—Ä–¥—Ü–∞", callback_data="start_heart")],
    [InlineKeyboardButton(text="üìò –ò—Ç–æ–≥ / –í—ã—É—á–∏—Ç—å", callback_data="heart_summary")]
])

@dp.message(CommandStart())
async def cmd_start(message: Message):
    user_progress[message.from_user.id] = {"section": None, "index": 0}
    await message.answer(start_text, reply_markup=menu_keyboard)

@dp.callback_query(F.data == "heart_summary")
async def show_summary(callback: CallbackQuery):
    await callback.message.answer(quiz_data["heart_summary"])

@dp.callback_query(F.data.startswith("start_"))
async def start_quiz(callback: CallbackQuery):
    section = callback.data.split("_")[1]
    user_id = callback.from_user.id
    user_progress[user_id] = {"section": section, "index": 0}
    await send_question(callback.message, user_id)

async def send_question(message, user_id):
    progress = user_progress[user_id]
    section = progress["section"]
    index = progress["index"]

    if index >= len(quiz_data[section]):
        await message.answer("‚úÖ –í–∏–∫—Ç–æ—Ä–∏–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ! üôå")
        return

    item = quiz_data[section][index]
    buttons = [InlineKeyboardButton(text=opt, callback_data=f"answer_{index}_{i}_{item['a']}_{section}") for i, opt in enumerate(item["options"])]
    keyboard = InlineKeyboardMarkup(inline_keyboard=[[btn] for btn in buttons])
    await message.answer(f"<b>{item['q']}</b>", reply_markup=keyboard)

@dp.callback_query(F.data.startswith("answer_"))
async def handle_answer(callback: CallbackQuery):
    _, index, chosen, correct, section = callback.data.split("_")
    index, chosen, correct = int(index), int(chosen), int(correct)

    result = "‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ!" if chosen == correct else "‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë."
    await callback.answer(result, show_alert=True)

    user_id = callback.from_user.id
    user_progress[user_id]["index"] += 1
    await send_question(callback.message, user_id)

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
